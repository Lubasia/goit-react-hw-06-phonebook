{"version":3,"sources":["redux/phoneBook/phoneBook-actions.js","component/ContactList/ContactList.js","component/Form/Form.js","component/Filter/Filter.js","component/Phonebook/Phonebook.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","index.js","component/Form/Form.module.css","component/ContactList/ContactList.module.css"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","getFilteredContacts","allContacts","filter","contact","toLowerCase","includes","connect","contacts","items","dispatch","onDeleteContact","phoneBookActions","className","styles","ContactList","map","ContactListItem","ContactListName","ContactListBtn","type","onClick","Form","state","error","errorMessage","handleChangeInput","e","target","value","setState","handleSubmit","preventDefault","props","some","setTimeout","reset","onAddContact","this","onSubmit","FormLabel","FormInput","onChange","pattern","title","required","FormBtn","Component","onChangeFilter","event","currentTarget","style","length","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5d1e4b14.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, changeFilter };\n","import { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions'\nimport styles from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.ContactList}>\n    <h2> Contacts </h2>\n    {contacts.map(({ id, name, number }) => (\n      <li className={styles.ContactListItem} key={id}>\n        <span className={styles.ContactListName}>{name} :</span>\n        <span> {number} </span>\n        <button\n          className={styles.ContactListBtn}\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          {' '}\n          Del 🗑\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nconst getFilteredContacts = (allContacts, filter) => {\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\n  return {\n    contacts: getFilteredContacts(items, filter),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(phoneBookActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions'\nimport styles from '../Form/Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n    error: false,\n    errorMessage: '',\n  };\n  \n   reset() {\n    this.setState({ name: '', number: '' });\n  }\n\n  handleChangeInput = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const contacts = this.props.contacts;\n\n    if (contacts.some(contact => contact.name === name)) {\n      this.setState({\n        error: true,\n        errorMessage: 'Этот контакт уже существует',\n      });\n      setTimeout(() => {\n        this.setState({ error: false });\n      }, 3000);\n      this.reset();\n      return;\n    }\n\n    this.props.onAddContact(name, number);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\n        <label className={styles.FormLabel}>\n          Name\n          <input\n            className={styles.FormInput}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChangeInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.FormLabel}>\n          Number\n          <input\n            className={styles.FormInput}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChangeInput}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={styles.FormBtn} type=\"submit\">\n          {' '}\n          Add Contact ✅{' '}\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, number) =>\n    dispatch(phoneBookActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { connect } from 'react-redux';\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport style from '../Form/Form.module.css'\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label>\n      Find contacts by name 🔍\n      <input type=\"text\"\n        className={style.FormLabel}\n        value={value}\n        onChange={onChangeFilter}\n        name=\"filter\" />\n    </label>\n  );\n};\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: event =>\n    dispatch(phoneBookActions.changeFilter(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { connect } from 'react-redux';\nimport ContactList from '../ContactList';\nimport Form from '../Form';\nimport Filter from '../Filter';\n\nconst Phonebook = ({ contacts }) => {\n    return (\n      <div>\n        <h1> Phonebook ☎️ </h1>\n        <Form />\n        \n        {contacts.length > 1 && (<Filter />)}\n        {contacts.length > 0 && (<ContactList/>)}\n        {contacts.length === 0 && (<h3> No Contacts <span>🙁</span> </h3>)}\n    \n      </div>\n  \n    )\n  };\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps, null)(Phonebook);\n","import React from 'react';\nimport Phonebook from './component/Phonebook';\n\nconst App = () => {\n  return <Phonebook />;\n};\n\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport actions from './phoneBook-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, phoneBookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n        </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__1owrn\",\"FormLabel\":\"Form_FormLabel__2b6s0\",\"FormInput\":\"Form_FormInput__3jlUY\",\"FormBtn\":\"Form_FormBtn__3vk-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2DZl_\",\"ContactListItem\":\"ContactList_ContactListItem__2rO1o\",\"ContactListBtn\":\"ContactList_ContactListBtn__3QEpx\",\"ContactListName\":\"ContactList_ContactListName__19cNg\"};"],"sourceRoot":""}